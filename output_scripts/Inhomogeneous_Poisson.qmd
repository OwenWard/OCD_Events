---
title: "Inhomogeneous Poisson"
author: Owen G. Ward
date: "November 2022"
format: 
  html: default
  # pdf: default
editor: source
---

```{r setup}
#| echo: false
#| message: false

library(here)
library(tidyverse)
theme_set(theme_bw())

knitr::opts_chunk$set(echo = TRUE,
                      dev = "png",
                      fig.height = 5,
                      fig.width = 7, dpi = 300,
                      message = FALSE)
axis_title <- 16
axis_text_size <- 14
legend_text <- 14
line_size <- 1

```

### Initialization Scheme

We first investigate the performance of the proposed initialization scheme. For these experiments we use the initialization routine for the first 10% of data and 50% of the nodes.

Here what happens quite regularly is that we will have a good estimate following the initialization scheme but the community structure after fitting to the rest of the data will be degenerate, leading to the long boxplots going to zero. I'm trying to investigate this as I think it could be a bug.

```{r init-scheme}
#| echo: false
#| fig-cap: Initialization leads to an improvement, somewhat weak.
data_path <- here("Experiments", "exp_results", "November")

files <- list.files(data_path, pattern = "exp_inpois_nodes_fixed_nov_1_rho_15")

## then read these in, look at them
sim_data <- files %>% 
  map_dfr(~readRDS(here("Experiments/exp_results/November", .x))) 


sim_data %>% 
  group_by(init, nodes) %>% 
  # summarise(mean_ARI = mean(ARI), sd_ARI = sd(ARI)) %>% 
  ggplot(aes(as.factor(nodes), ARI)) +
  geom_boxplot(aes(fill = init)) +
  labs(x = "Nodes", fill = "Init Scheme")

```

```{r}
#| echo: false
#| fig-cap: Impact of chosen window on recovery

sim_data %>% 
  group_by(init, nodes) %>% 
  summarise(mean_ARI = mean(ARI), sd_ARI = sd(ARI))




sim_data %>% 
  group_by(init, window) %>% 
  ggplot(aes(as.factor(window), ARI)) +
  geom_boxplot(aes(fill = init)) +
  facet_wrap(vars(init, nodes)) +
  labs(x = "Fitted Window", fill = "Init Scheme")

## better in terms of the final result, what about the initial performance?

```

## Increasing Nodes

```{r fig-inhom-pois-nodes, fig.path = "rev_figure/"}
#| echo: false
#| fig-cap: Community Recovery as we increase the number of nodes.

sim_data %>% 
  filter(init == "Init") %>% 
  group_by(nodes) %>% 
  ggplot(aes(as.factor(nodes), ARI)) +
  geom_boxplot() +
  labs(x = "Nodes") +
  theme(axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        legend.text = element_text(size = legend_text))

```

## Effect of Rate on Community Recovery

Similarly, we can investigate the effect of changing the rate of the underlying point processes and the performance in terms of community recovery.

Here we look at the average rate, defined as the average number of events per unit of time, for a pair of nodes which interact.

Here the rate matrix is given by the following five settings.

```{r}
#| eval: false

if(sim_id == 1){
    MuA[, , 1] <- matrix(c(0.8, 0.2, 0.6, 0.4), 2, 2)
    MuA[, , 2] <- matrix(c(0.4, 0.7, 0.2, 0.7), 2, 2)
  }
  if(sim_id == 2){
    MuA[, , 1] <- matrix(c(0.8, 0.2, 0.6, 0.4)/2, 2, 2)
    MuA[, , 2] <- matrix(c(0.4, 0.7, 0.2, 0.7)/2, 2, 2)
  }
  if(sim_id == 3){
    MuA[, , 1] <- matrix(c(0.8, 0.2, 0.6, 0.4)/5, 2, 2)
    MuA[, , 2] <- matrix(c(0.4, 0.7, 0.2, 0.7)/5, 2, 2)
  }
  if(sim_id == 4){
    MuA[, , 1] <- matrix(c(0.8, 0.2, 0.6, 0.4)/10, 2, 2)
    MuA[, , 2] <- matrix(c(0.4, 0.7, 0.2, 0.7)/10, 2, 2)
  }
  if(sim_id == 5){
    MuA[, , 1] <- matrix(c(0.8, 0.2, 0.6, 0.4)/20, 2, 2)
    MuA[, , 2] <- matrix(c(0.4, 0.7, 0.2, 0.7)/20, 2, 2)
  }

```

```{r load-rate-data}
#| message: false
#| echo: false
data_path <- here("Experiments", "exp_results", "November")

exps <- list.files(path = data_path, pattern = "exp_inpois_nodes_vary_rate")

sims <- exps  %>% 
  map_dfr(~readRDS(here("Experiments/exp_results/November", .x))) 

sims %>% 
  # filter(window == 10) %>%
  group_by(rate, init) %>% 
  # summarise(avg = mean(ARI), sd = sd(ARI)) %>% 
  ggplot(aes(rate, ARI, colour = init)) +
  geom_point() +
  geom_smooth(method = "lm") +
  facet_wrap(~init) +
  scale_x_reverse() +
  labs(x = "Mean Rate", y = "ARI",
       title = "Clustering Performance as we have sparser Events") +
  theme(legend.position = "none")

```

This is for varying estimated step sizes, i.e the $h$ in $f_{h}(t)$, the step function of the inhomogeneous Poisson process. If we instead set the $h$ used in estimation to be the true choice, then we have the following result. The performance is more stable as the average number of events decreases.

```{r}
#| echo: false
#| message: false
#| fig-cap: Performance with the true step kernel function used.

sims %>% 
  filter(window == 10) %>% 
  ggplot(aes(rate, ARI, colour = init)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  facet_wrap(~init) +
  scale_x_reverse() +
  labs(x = "Mean Rate", y = "ARI",
       title = "Clustering Performance as we have sparser Events") +
  theme(legend.position = "none")
```

## Varying the number of Communities

```{r fig-inhom-pois-K, fig.path = "rev_figure/"}
#| fig-cap: Community Recovery as we vary the number of communities.
k_sims_path <- list.files(path = data_path, pattern = "exp_inpois_k")

k_sims <- k_sims_path %>%
  map_dfr(~readRDS(here("Experiments/exp_results/November", .x))) 

k_sims %>% 
  filter(init == "Init") %>% 
  ggplot(aes(as.factor(K), ARI)) +
  geom_boxplot() +
  labs(x = "K") +
  theme(axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        legend.text = element_text(size = legend_text))

## this looks fine, similar to homogeneous Poisson

```

## Online Community Recovery

```{r fig-inhom-pois-online, fig.path = "rev_figure/"}
#| echo: false
#| fig-cap: Community Recovery as events are observed over time.

online_sim_path <- list.files(path = data_path,
                              pattern = "exp_in_pois_online_nov_9")

online_sims <- online_sim_path %>% 
  map_dfr(~readRDS(here("Experiments/exp_results/November", .x))) 

# online_sims %>% 
#   mutate(nodes = m0 * 2) %>% 
#   ggplot(aes(time, ARI)) +
#   geom_point() +
#   facet_wrap(~nodes) +
#   geom_smooth()


online_sims %>% 
  mutate(nodes = m0 * 2) %>% 
  group_by(nodes, time) %>% 
  summarise(avg = mean(ARI), sd = sd(ARI)) %>% 
  rowwise() %>% 
  mutate(min = max(avg - sd, 0), max = min(avg + sd, 1)) %>% 
  ggplot(aes(time, avg)) +
  geom_point() +
  geom_line() +
  geom_errorbar(aes(ymin = min, ymax = max), width = 5, alpha = 0.5) +
  facet_wrap(~nodes) +
  labs(x = "Time", y = "ARI") +
  theme(axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        legend.text = element_text(size = legend_text))

### need to tidy this up some more, but not a bad starting point

## could probably start this at t = 20, just to see how it looks
```

## Online Parameter Recovery

```{r fig-inhom-pois-param-recov, fig.path = "rev_figure/"}
#| echo: false

loss_files <- list.files(path = here("Experiments/exp_results/November/"), 
                          pattern = "exp_in_pois_online_loss")

param_data <- loss_files %>% 
     map(~read_rds(here("Experiments",
                        "exp_results",
                        "November",
                         .x))) %>% 
  flatten() %>% 
  imap(~update_list(., sim = .y)) %>% 
  map(`[`, c("sim", "Time", "Mu_ests", "clust")) %>% 
  imap(~update_list(., sum_Mu = apply(.x$Mu, 1, sum))) %>% 
  map_dfr(`[`, c("sum_Mu","sim", "Time", "clust")) %>% 
  group_by(sim, Time) %>% 
  mutate(index = row_number() + 21)

# param_data %>% 
#   ggplot(aes(index, sum_Mu,)) +
#   geom_line(aes(group = sim))

## true total = 4.7, 8 pars

recov_plot <- param_data %>% 
  ### add time here!
  mutate(Time = paste0("Time = ", Time)) %>% 
  mutate(Time = factor(Time, 
                       levels = c("Time = 50",
                                  "Time = 100",
                                  "Time = 200",
                                  "Time = 500"))) %>% 
  # filter(clust == 1) %>% 
  mutate(diff = abs(sum_Mu - 4.7)/8) %>% 
  ggplot(aes(index, diff)) +
  # geom_line(aes(group = sim), alpha = 0.2) +
  geom_smooth(se = FALSE, method = "loess", size = 1) +
  facet_wrap(~Time, scales = "free_x") +
  labs(x = "Time", y = "Difference") +
  scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
  theme(axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        strip.text.x = element_text(size = axis_title),
        legend.text = element_text(size = legend_text))

recov_plot

```

## Online Regret

We have some results from this now.

```{r fig-inhom-pois-regret, fig.path = "rev_figure/"}
#| echo: false

regret_files <- list.files(path = here("Experiments/exp_results/November/"),
                          pattern = "exp_in_pois_regret")

sim_50 <- read_rds(here("Experiments",
                             "exp_results", "November",
                             regret_files[3])) %>% 
  tibble(
  sim = 1:100,
  ARI = map_dbl(., "clust"),
  regret = map(., "regret"),
  perm_regret = map(., "regret_perm"),
  emp_regret = map(., "emp_regret"),
  dT = list(21:50)) %>% 
  unnest(cols = c(regret, perm_regret, emp_regret, dT)) %>% 
  select(sim, ARI, regret, perm_regret, emp_regret, dT) %>% 
  mutate(Time = 50) 


sim_100 <- read_rds(here("Experiments",
                             "exp_results", "November",
                             regret_files[1])) %>% 
  tibble(
  sim = 1:100,
  ARI = map_dbl(., "clust"),
  regret = map(., "regret"),
  perm_regret = map(., "regret_perm"),
  emp_regret = map(., "emp_regret"),
  dT = list(21:100)) %>% 
  unnest(cols = c(regret, perm_regret, emp_regret, dT)) %>% 
  select(sim, ARI, regret, perm_regret, emp_regret, dT) %>% 
  mutate(Time = 100) 

sim_200 <- read_rds(here("Experiments",
                             "exp_results", "November",
                             regret_files[2])) %>% 
  tibble(
  sim = 1:100,
  ARI = map_dbl(., "clust"),
  regret = map(., "regret"),
  perm_regret = map(., "regret_perm"),
  emp_regret = map(., "emp_regret"),
  dT = list(21:200)) %>% 
  unnest(cols = c(regret, perm_regret, emp_regret, dT)) %>% 
  select(sim, ARI, regret, perm_regret, emp_regret, dT) %>% 
  mutate(Time = 200) 




sim_500 <- regret_files[4:13] %>%
  map(~readRDS(here("Experiments",
                    "exp_results",
                    "November", .x))) %>% 
  flatten() %>% 
  tibble(
  sim = 1:100,
  ARI = map_dbl(., "clust"),
  regret = map(., "regret"),
  perm_regret = map(., "regret_perm"),
  emp_regret = map(., "emp_regret"),
  dT = list(21:500)) %>% 
  unnest(cols = c(regret, perm_regret, emp_regret, dT)) %>% 
  select(sim, ARI, regret, perm_regret, emp_regret, dT) %>% 
  mutate(Time = 500) 

min_perm <- sim_50 %>% 
  group_by(sim) %>% 
  summarise(s1 = sum(regret), s2 = sum(perm_regret)) %>%
  mutate(min = ifelse(s1 < s2, "regret", "perm_regret"))

new_sim_50 <- sim_50 %>% 
  left_join(min_perm %>% select(sim, min), by = "sim") %>% 
  pivot_longer(cols = regret:emp_regret, names_to = "form",
               values_to = "regret") %>% 
  filter((min == form)| form == "emp_regret") %>% 
  mutate(form = ifelse(form == "perm_regret", "regret", form))


min_perm <- sim_100 %>% 
  group_by(sim) %>% 
  summarise(s1 = sum(regret), s2 = sum(perm_regret)) %>%
  mutate(min = ifelse(s1 < s2, "regret", "perm_regret"))

new_sim_100 <- sim_100 %>% 
  left_join(min_perm %>% select(sim, min), by = "sim") %>% 
  pivot_longer(cols = regret:emp_regret, names_to = "form",
               values_to = "regret") %>% 
  filter((min == form)| form == "emp_regret") %>% 
  mutate(form = ifelse(form == "perm_regret", "regret", form))

min_perm <- sim_200 %>% 
  group_by(sim) %>% 
  summarise(s1 = sum(regret), s2 = sum(perm_regret)) %>%
  mutate(min = ifelse(s1 < s2, "regret", "perm_regret"))

new_sim_200 <- sim_200 %>% 
  left_join(min_perm %>% select(sim, min), by = "sim") %>% 
  pivot_longer(cols = regret:emp_regret, names_to = "form",
               values_to = "regret") %>% 
  filter((min == form)| form == "emp_regret") %>% 
  mutate(form = ifelse(form == "perm_regret", "regret", form))

min_perm <- sim_500 %>% 
  group_by(sim) %>% 
  summarise(s1 = sum(regret), s2 = sum(perm_regret)) %>%
  mutate(min = ifelse(s1 < s2, "regret", "perm_regret"))

new_sim_500 <- sim_500 %>% 
  left_join(min_perm %>% select(sim, min), by = "sim") %>% 
  pivot_longer(cols = regret:emp_regret, names_to = "form",
               values_to = "regret") %>% 
  filter((min == form)| form == "emp_regret") %>% 
  mutate(form = ifelse(form == "perm_regret", "regret", form))

equal_breaks <- function(n = 3, s = 0.05, ...){
  function(x){
    # rescaling
    # d <- s * diff(range(x)) / (1+2*s)
    floor(seq(0, max(x), length=n))
  }
}

dT <- 1


bind_rows(new_sim_50, new_sim_100, new_sim_200, new_sim_500) %>% 
  mutate(form = ifelse(form == "regret", "True Membership", form)) %>% 
  mutate(form = ifelse(form == "emp_regret", "Estimated Membership", form)) %>%
  mutate(Time = paste0("Time = ", Time)) %>% 
  mutate(Time = factor(Time, 
                       levels = c("Time = 50", 
                                  "Time = 100",
                                  "Time = 200",
                                  "Time = 500"))) %>% 
  # filter(ARI == 1) %>%
  filter(form == "Estimated Membership") %>%
  group_by(Time, dT, form) %>% 
  ggplot(aes(dT, regret, colour = form)) +
  # geom_line(alpha = 0.5) +
  geom_smooth(se = FALSE, size = 1) +
  facet_wrap(~Time, scales = "free_x") +
  labs(y = "Regret", x = "Time", colour = "") +
  scale_x_continuous(breaks = equal_breaks(n = 3, s = 0.05),
                     expand = c(0, max(dT) - 1)) +
  theme(axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        strip.text.x = element_text(size = axis_title),
        legend.text = element_text(size = legend_text),
        legend.position = "none")

```

## Online Loss

```{r fig-inhom-pois-loss, fig.path = "rev_figure/"}
#| echo: false

loss_files <- list.files(path = here("Experiments/exp_results/November/"), 
                          pattern = "exp_in_pois_online_loss")

loss_data <- loss_files %>% 
  map(~readRDS(here("Experiments/exp_results/November/", .x))) %>% 
  flatten() %>% 
  imap(~update_list(., sim = .y)) %>% 
  map_dfr(`[`, c("online_loss", "batch_ave_loss",
                 "sim", "clust", "sparsity")) %>% 
  reduce(data.frame) %>% 
  as_tibble() %>% 
  rename(Batch_Loss = elt, Sim = elt.1, ARI = elt.2, sparisty = elt.3) %>% 
  group_by(Sim) %>% 
  mutate(Time = max(dT)) 


batch_loss <- 
  loss_data %>% 
  group_by(Time) %>% 
  summarise(batch = unique(Batch_Loss)) %>% 
  mutate(Time = paste0("Time = ", Time)) %>% 
  mutate(Time = factor(Time, levels = c("Time = 50",
                                  "Time = 100",
                                  "Time = 200",
                                  "Time = 500")))

loss_plot <- loss_data %>% 
  # filter(Sim == 1) %>% 
  filter(Z == "Est_Z") %>% 
  # filter(Time == 200) %>% 
  mutate(Time = paste0("Time = ", Time)) %>% 
  mutate(Time = factor(Time, 
                       levels = c("Time = 50",
                                  "Time = 100",
                                  "Time = 200",
                                  "Time = 500"))) %>% 
  ggplot(aes(dT, Loss)) +
  geom_line(aes(group = interaction(Sim, Z)), alpha = 0.2) +
  geom_hline(data = batch_loss, aes(yintercept =  batch), colour = "red") +
  facet_wrap(~Time, scales = "free_x") +
  labs(x = "Time") +
  theme(legend.position = "null",
        axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        strip.text.x = element_text(size = axis_title),
        legend.text = element_text(size = legend_text))

loss_plot

```

# Hawkes Plots

## Number of Nodes

```{r fig-hawkes-nodes, fig.path = "rev_figure/"}
#| echo: false

hawkes_files <- list.files(path = here("Experiments/exp_results/Hawkes"),
                   pattern = "exp_hawkes_new_nodes")


hawkes_sims <- hawkes_files %>% 
  map_dfr(~readRDS(here("Experiments/exp_results/Hawkes", .x)))


hawkes_nodes <- hawkes_sims %>% 
  ggplot(aes(as.factor(nodes), ARI)) +
  geom_boxplot() +
  labs(x = "Nodes") +
  theme(axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        legend.title = element_text(size = axis_title),
        legend.text = element_text(size = legend_text))


# ggsave(here("Thesis_Output", "rev_figures", "hawkes_nodes.png"),
#        hawkes_nodes,
#        width = 7, height = 5, 
#        units = "in", dpi = 300)
```

## Number of Communities

```{r fig-hawkes-k, fig.path = "rev_figure/"}
#| echo: false

hawkes_files <- list.files(path = here("Experiments/exp_results/Hawkes"),
                   pattern = "exp_hawkes_k")


hawkes_sims <- hawkes_files %>% 
  map_dfr(~readRDS(here("Experiments/exp_results/Hawkes/", .x)))


hawkes_k <- hawkes_sims %>% 
  ggplot(aes(as.factor(K), ARI)) +
  geom_boxplot() +
  labs(x = "K") +
  ylim(c(0, 1)) +
  theme(axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        legend.title = element_text(size = axis_title),
        legend.text = element_text(size = legend_text))

hawkes_k

```

## Parameter Recovery

```{r fig-hawkes-param-recov, fig.path = "rev_figure/"}
#| echo: false

hawkes_par_files <- list.files(path =
                                 here("Experiments/exp_results/Hawkes/"),
                   pattern = "exp_hawkes_param")

hawkes_pars <- hawkes_par_files %>% 
  map(~readRDS(here("Experiments/exp_results/Hawkes/", .x))) %>% 
  flatten() %>% 
  imap(~update_list(., sim = .y)) %>% 
  map(`[`, c("sim", "Time", "B_ests", "clust", "Mu_ests", "lambda")) %>% 
  imap(~update_list(., sum_B = apply(.x$B_ests, 3, sum),
                       sum_Mu = apply(.x$Mu_ests, 3, sum))) %>% 
  map_dfr(`[`, c("sim", "Time", "clust", "sum_Mu", "sum_B", "lambda"))


names <- colnames(hawkes_pars)

new_hawkes <- hawkes_pars %>% 
  reduce(data.frame) %>% as_tibble()

colnames(new_hawkes) <- names

hawkes_par <- new_hawkes %>% 
  rename(lam_est = lambda) %>% 
  group_by(sim, Time) %>% 
  mutate(index = row_number()) %>% 
  ### add time here!
  mutate(Time = paste0("Time = ", Time)) %>% 
  mutate(Time = factor(Time, 
                       levels = c("Time = 50",
                                  "Time = 100",
                                  "Time = 200",
                                  "Time = 500"))) %>% 
  mutate(Mu = abs(sum_Mu - 3.65)/4,
         B = abs(sum_B - 1)/4,
         lambda = abs(lam_est - 1)) %>% 
  pivot_longer(cols = Mu:lambda, names_to = "Parameter",
               values_to = "diff") %>% 
  filter(clust == 1) %>% 
  ggplot(aes(index, diff, colour = Parameter)) +
  geom_smooth(se = FALSE, method = "loess", size = line_size) +
  # geom_line(aes(group = interaction(sim, param)), alpha = 0.2) +
  facet_wrap(~Time, scales = "free_x") +
  labs(x = "Time", y = "Difference") +
  scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
  scale_fill_discrete(name = "Parameter") +
  theme(axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        legend.title = element_text(size = axis_title),
        legend.text = element_text(size = legend_text))

hawkes_par

```

## Online Community Recovery

```{r fig-hawkes-online, fig.path = "rev_figure/"}
#| echo: false

hawkes_files <- list.files(path = here("Experiments/exp_results/Hawkes/"),
                   pattern = "exp_hawkes_online")

hawkes_data <- hawkes_files %>% 
  map_dfr(~readRDS(here("Experiments/exp_results/Hawkes/", .x)))


## match above plot
hawkes_online <- hawkes_data %>% 
  group_by(time, nodes) %>% 
  summarise(mean_ARI = mean(ARI), sd_ARI = sd(ARI)) %>% 
  group_by(time) %>% 
  mutate(nodes = paste0("n = ", nodes)) %>% 
  mutate(nodes = factor(nodes, 
                       levels = c("n = 200", "n = 500",
                                  "n = 1000"))) %>% 
  mutate(lower = max(0, mean_ARI - sd_ARI),
         upper = min(1, mean_ARI + sd_ARI)) %>% 
  ggplot(aes(time, mean_ARI)) +
  geom_line(size = 1) +
  geom_point() +
  geom_errorbar(aes(ymin = lower, ymax = upper), alpha = 0.4) +
  ylim(c(0, 1)) +
  labs(colour = "Number of Nodes", y = "ARI", x = "Time", width = 0.2) +
  facet_wrap(~nodes) +
  theme(axis.text = element_text(size = axis_text_size),
        axis.title = element_text(size = axis_title),
        legend.title = element_text(size = axis_title),
        legend.text = element_text(size = legend_text)) 


hawkes_online
```
